{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","id","uuidv4","this","className","styled","contactForm","type","pattern","title","required","onChange","input","button","Component","Filter","ContactsList","contacts","remove","map","item","text","onClick","App","filter","addContact","contact","find","alert","deleteContact","prev","filterContact","normalizedFilter","toLowerCase","includes","localStorage","getItem","parseCont","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46a2e191.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3uV24\"};","import React, { Component } from \"react\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"./ContactForm.module.css\"\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { value, name } = e.currentTarget\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const isSuccess = this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuidv4(),\r\n    })\r\n\r\n    if (isSuccess) {\r\n      this.setState({\r\n        name: \"\",\r\n        number: \"\",\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n    return (\r\n      <form className={styled.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={styled.input}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={styled.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styled.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n}\r\n\r\nexport default ContactForm\r\n","import PropTypes from \"prop-types\"\r\nimport styled from \"./Filter.module.css\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input value={value} onChange={onChange} name=\"filter\" type=\"text\" className={styled.input}></input>\r\n  </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter\r\n","import PropTypes from \"prop-types\"\r\nimport styled from \"./ContactsList.module.css\"\r\n\r\nconst ContactsList = ({ contacts, remove }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styled.item} key={id}>\r\n          <p className={styled.text}>{name}:</p>\r\n          <p className={styled.text}>{number}</p>\r\n          <button className={styled.button} onClick={() => remove(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  remove: PropTypes.func,\r\n}\r\n\r\nexport default ContactsList\r\n","import React, { Component } from \"react\"\nimport ContactForm from \"./components/ContactForm/ContactForm\"\nimport Filter from \"./components/Filter/Filter\"\nimport ContactsList from \"./components/ContactsList/ContactsList\"\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\")\n    const parseCont = JSON.parse(contacts)\n\n    if (parseCont) {\n      this.setState({ contacts: parseCont })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n    }\n  }\n\n  addContact = (contact) => {\n    const { contacts } = this.state\n    if (contacts.find((item) => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts`)\n      return false\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }))\n    return true\n  }\n\n  deleteContact = (id) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== id),\n    }))\n  }\n\n  handleChange = (e) => {\n    const { value, name } = e.currentTarget\n    this.setState({ [name]: value })\n  }\n\n  filterContact = () => {\n    const normalizedFilter = this.state.filter.toLowerCase()\n    return this.state.contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  render() {\n    const { filter } = this.state\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.handleChange} />\n        <ContactsList contacts={this.filterContact()} remove={this.deleteContact} />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2j5uS\",\"input\":\"ContactForm_input__3Lk0_\",\"button\":\"ContactForm_button__2uOvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__3vGTD\",\"item\":\"ContactsList_item__uBT9O\",\"text\":\"ContactsList_text__16op9\"};"],"sourceRoot":""}